# Generated by Django 5.2.1 on 2025-05-10 12:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, help_text='Name of the novel', max_length=255, verbose_name='Novel Name')),
                ('content', models.TextField(help_text='Full content of the novel', verbose_name='Content')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error')], db_index=True, default='pending', max_length=50)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='novels', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Novel',
                'verbose_name_plural': 'Novels',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChunkAnnotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('raw_text', models.TextField(help_text='Original text before cleaning', verbose_name='Raw Text')),
                ('clean_text', models.TextField(help_text='Cleaned text', verbose_name='Clean Text')),
                ('index', models.PositiveIntegerField(db_index=True, help_text='Annotation order in novel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error')], db_index=True, default='pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunk_annotations', to='audiobook.novel', verbose_name='Novel')),
            ],
            options={
                'verbose_name': 'Chunk Annotation',
                'verbose_name_plural': 'Chunk Annotations',
                'ordering': ['index'],
                'unique_together': {('novel', 'index')},
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Character name', max_length=255)),
                ('character_info', models.TextField(help_text='Information about the character', verbose_name='Character Info')),
                ('index', models.PositiveIntegerField(db_index=True, help_text='Character order in novel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='audiobook.novel', verbose_name='Novel')),
            ],
            options={
                'verbose_name': 'Character',
                'verbose_name_plural': 'Characters',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='SentenceAnnotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('context', models.TextField(help_text='Sentence context', verbose_name='Context')),
                ('index', models.PositiveIntegerField(db_index=True, help_text='Sentence order in novel')),
                ('type', models.CharField(db_index=True, help_text='Type of annotation', max_length=100)),
                ('raw_character', models.TextField(help_text='Raw character text', verbose_name='Raw Character')),
                ('emotion', models.CharField(db_index=True, help_text='Emotion of the sentence', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], db_index=True, max_length=6)),
                ('voice_actor', models.CharField(blank=True, help_text='Voice actor (placeholder)', max_length=100)),
                ('chunk_index', models.PositiveIntegerField(help_text='Index of the chunk annotation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('chunk_annotation_belong', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_annotations', to='audiobook.chunkannotation', verbose_name='Chunk Annotation')),
                ('identity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_annotations', to='audiobook.character', verbose_name='Character')),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentence_annotations', to='audiobook.novel', verbose_name='Novel')),
            ],
            options={
                'verbose_name': 'Sentence Annotation',
                'verbose_name_plural': 'Sentence Annotations',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='ChunkContextMemory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('content', models.TextField(help_text='Context memory text', verbose_name='Context Content')),
                ('index', models.PositiveIntegerField(db_index=True, help_text='Context memory order in novel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunk_context_memories', to='audiobook.novel', verbose_name='Novel')),
            ],
            options={
                'verbose_name': 'Chunk Context Memory',
                'verbose_name_plural': 'Chunk Context Memories',
                'ordering': ['index'],
                'unique_together': {('novel', 'index')},
            },
        ),
        migrations.CreateModel(
            name='TextChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('content', models.TextField(help_text='Text content of the chunk', verbose_name='Chunk Content')),
                ('index', models.PositiveIntegerField(db_index=True, help_text='Chunk order in novel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error')], db_index=True, default='pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_chunks', to='audiobook.novel', verbose_name='Novel')),
            ],
            options={
                'verbose_name': 'Text Chunk',
                'verbose_name_plural': 'Text Chunks',
                'ordering': ['index'],
                'unique_together': {('novel', 'index')},
            },
        ),
    ]
